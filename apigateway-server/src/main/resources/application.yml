server:
  port: 11000

spring:
  application:
    name: apigateway-server
  profiles:
    active: dev
  config:
    import: optional:configserver:http://localhost:10000/

  cloud:
    config:
      name: bootstrap
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigin: "http://localhost:5713"
            allowedMethod:
              - GET
              - POST
              - DELETE
              - PUT
              - OPTIONS
              - PATCH
            allowedHeaders: '*'
            allow-credentials: true
      routes:
        #회원 관리자
        - id: member-server
          uri: lb://MEMBER-SERVER/api/admin
          predicates:
            - Path=/member-server/api/admin/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/member-server/(?<segment>.*),/$\{segment}

        #회원 프론트
        - id: member-server
          uri: lb://MEMBER-SERVER/api/front
          predicates:
            - Path=/member-server/api/front/**
          filters:
            - RewritePath=/member-server/(?<segment>.*),/$\{segment}

        #로그인
        - id: member-server
          uri: lb://MEMBER-SERVER/login
          predicates:
            - Path=/member-server/login
            - Method=POST
          filters:
            - RewritePath=/member-server/(?<segment>.*),/$\{segment}

        #회원가입, 재발행, 로그아웃, 토큰 조회
        - id: member-server
          uri: lb://MEMBER-SERVER/auth
          predicates:
            - Path=/member-server/auth/**
          filters:
            - RewritePath=/member-server/(?<segment>.*),/$\{segment}

        #지옥로그 관리자
        - id: jeeoklog-server
          uri: lb://JEEOKLOG-SERVER/api/admin
          predicates:
            - Path=/jeeoklog-server/api/admin/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/jeeoklog-server/(?<segment>.*),/$\{segment}

        #지옥로그 프론트
        - id: jeeoklog-server
          uri: lb://JEEOKLOG-SERVER/api/front
          predicates:
            - Path=/jeeoklog-server/api/front/**
          filters:
            - RewritePath=/jeeoklog-server/(?<segment>.*),/$\{segment}

        #지록숍 스토어 관리자
        - id: jeeokshop-store-server
          uri: lb://JEEOKSHOP-STORE-SERVER/api/admin
          predicates:
            - Path=/jeeokshop-store-server/api/admin/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/jeeokshop-store-server/(?<segment>.*),/$\{segment}

        #지옥숍 스토어 프론트
        - id: jeeokshop-store-server
          uri: lb://JEEOKSHOP-STORE-SERVER/api/front
          predicates:
            - Path=/jeeokshop-store-server/api/front/**
          filters:
            - RewritePath=/jeeokshop-store-server/(?<segment>.*),/$\{segment}

#actuator config
management:
  endpoints:
    web:
      exposure:
        include: gateway
  endpoint:
    gateway:
      enabled: false #/actuator/gateway/routes 경로로 routes 보기

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true

token:
  access-expired-time: 3600000
  refresh-expired-time: 604800000
  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
  refresh-token-name: refresh-token
  access-token-name: access-token